@model Models.DTO.TestCreateViewModel
@{
    ViewData["Title"] = "Створити тест";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="AddTest" method="post">
    <div class="mb-3">
        <label asp-for="Name" class="form-label">Назва</label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Description" class="form-label">Опис</label>
        <textarea asp-for="Description" class="form-control"></textarea>
    </div>
    <div class="mb-3">
        <label asp-for="Password" class="form-label">Пароль доступу</label>
        <input asp-for="Password" class="form-control" />
    </div>
    <div class="mb-3">
        <label asp-for="ValidUntil" class="form-label">Дійсний до</label>
        <input asp-for="ValidUntil" class="form-control" type="datetime-local" id="ValidUntil" />
        <span asp-validation-for="ValidUntil" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="TeacherId" class="form-label">Вчитель</label>
        <select asp-for="TeacherId" class="form-select">
            <option value="">Оберіть вчителя</option>
            @if (ViewBag.Teachers != null)
            {
                foreach (var t in (IEnumerable<StudyTests.Models.Entities.Teacher>)ViewBag.Teachers)
                {
                    <option value="@t.Id">@t.FirstName @t.LastName (@t.Login)</option>
                }
            }
        </select>
    </div>

    <h4>Питання</h4>
    <div id="questions"></div>
    <button type="button" id="addQuestion" class="btn btn-secondary mb-3">Додати питання</button>

    <input type="hidden" id="QuestionsJson" name="QuestionsJson" />

    <button type="submit" class="btn btn-primary">Створити тест</button>
</form>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        let qIndex = 0;
        $(function(){
            // set min for datetime-local to current local datetime
            function toLocalDateTimeString(d) {
                const pad = (n) => n.toString().padStart(2, '0');
                return `${d.getFullYear()}-${pad(d.getMonth()+1)}-${pad(d.getDate())}T${pad(d.getHours())}:${pad(d.getMinutes())}`;
            }
            const now = new Date();
            $('#ValidUntil').attr('min', toLocalDateTimeString(now));

            // optional: prevent submitting with past date
            $('form').on('submit', function(e){
                const val = $('#ValidUntil').val();
                if (val) {
                    const selected = new Date(val);
                    if (selected <= new Date()) {
                        e.preventDefault();
                        alert('Обрана дата і час мають бути в майбутньому.');
                        return false;
                    }
                }
            });

            $('#addQuestion').on('click', function(){
                const qHtml = `
<div class="card mb-2" data-index="${qIndex}">
  <div class="card-body">
    <div class="mb-2">
            <label>Питання</label>
            <input class="form-control q-text" />
    </div>
        <div class="mb-2">
            <label>Бали за питання</label>
            <input class="form-control q-score" type="number" step="0.1" value="1" />
        </div>
    <div class="mb-2 answers">
      <label>Варіанти відповіді (виділіть правильну)</label>
      <div><input class="form-control a-text" /> <input type="radio" name="correct_${qIndex}" class="a-correct" /></div>
    </div>
    <button type="button" class="btn btn-sm btn-secondary add-answer">Додати варіант</button>
    <button type="button" class="btn btn-sm btn-danger remove-question">Видалити питання</button>
  </div>
</div>`;
                $('#questions').append(qHtml);
                qIndex++;
            });

            $('#questions').on('click', '.add-answer', function(){
                const container = $(this).closest('.card').find('.answers');
                const qidx = $(this).closest('.card').data('index');
                container.append(`<div><input class="form-control a-text" /> <input type="radio" name="correct_${qidx}" class="a-correct" /></div>`);
            });

            $('#questions').on('click', '.remove-question', function(){
                $(this).closest('.card').remove();
            });

            $('form').on('submit', function(e){
                const questions = [];
                $('#questions .card').each(function(){
                    const qText = $(this).find('.q-text').val();
                    const scoreVal = parseFloat($(this).find('.q-score').val()) || 0;
                    const answers = [];
                    let correctIndex = 0;
                    $(this).find('.answers div').each(function(ai){
                        answers.push($(this).find('.a-text').val());
                        if ($(this).find('.a-correct').is(':checked')) correctIndex = ai;
                    });
                    questions.push({ Description: qText, Answers: answers, CorrectAnswerIndex: correctIndex, Score: scoreVal });
                });
                $('#QuestionsJson').val(JSON.stringify(questions));
                // append hidden field as form model binding expects Questions (we'll parse JSON in controller)
            });
        });
    </script>
}
